spring.application.name=PdfService
server.port=8083


# Feign client configuration
feign.client.config.default.loggerLevel=basic
feign.client.config.entity-service.url=http://localhost:8081/api/candidate-details
feign.client.config.default.connect-timeout=5000
feign.client.config.default.read-timeout=5000
feign.httpclient.enabled=true







#Kafka Consumer Configuration

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=pdf-service-group

# Producer Config
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Enable error-handling deserializer wrapper
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

# Delegate the actual deserialization to JsonDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

# Allow all packages to be trusted for JSON deserialization (or use specific ones)
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Force deserialization into your local DTO class
spring.kafka.consumer.properties.spring.json.value.default.type=com.Chronicles.PdfService.Kafka.DTO.PdfGenerationEvent

spring.kafka.consumer.properties.spring.json.use.type.headers=false
